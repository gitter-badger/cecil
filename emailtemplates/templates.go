// Code generated by go-bindata.
// sources:
// core/email-templates/account-verification-notification.html
// core/email-templates/lease-approved.html
// core/email-templates/lease-expiring.html
// core/email-templates/lease-extended.html
// core/email-templates/lease-terminated.html
// core/email-templates/misconfiguration-notice.html
// core/email-templates/new-lease-no-owner-tag.html
// core/email-templates/new-lease-owner-tag-not-whitelisted.html
// core/email-templates/new-lease-valid-owner-tag-needs-approval.html
// core/email-templates/new-lease-valid-owner-tag-no-approval-needed.html
// core/email-templates/region-successfully-setup.html
// DO NOT EDIT!

package emailtemplates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _accountVerificationNotificationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x92\x41\x4b\xf3\x40\x10\x86\xef\xfb\x2b\xa6\x7b\xe9\xa5\xfd\x72\xfd\x28\x6b\x40\x62\xa1\x8a\xd8\x62\x23\x28\x08\x65\xba\x99\x36\x6b\x93\xdd\x98\x4c\xd4\x50\xf2\xdf\xdd\x24\xf5\xa0\x05\xc1\x5c\x26\xcc\xce\x3c\xfb\xbe\x33\xab\x46\x57\xcb\x28\x7e\x5a\xcd\x21\xe5\x3c\x0b\x85\x1a\x82\x8f\x84\x49\x28\xc0\x7f\x2a\x27\x46\xd0\x29\x96\x15\xf1\x85\xac\x79\x37\xfd\x2f\x4f\x47\x6c\x38\xa3\x50\x05\x43\x14\x2a\x18\xda\x84\xda\xba\xa4\x39\xd5\x14\xe1\x82\x1a\x38\x1e\xff\xa1\xd6\xae\xb6\xbc\xb1\x98\x53\xdb\x4e\x80\x1d\xe8\x92\x90\x09\xd0\xc2\xe5\xea\xda\x27\x0e\x64\x27\x50\x91\x4d\x00\x61\xb5\x5c\xc7\x50\xd2\x6b\x4d\x15\x77\xb5\x6a\x1b\x7a\xc8\x1b\x95\x66\x67\x34\xb2\x71\x76\xc3\x58\xee\x89\x37\x75\x99\xb5\xad\x0a\xb6\x21\xbc\x1b\x4e\x81\x53\x53\xc1\xcd\x7a\x79\x07\x05\x36\x99\xc3\x64\xa6\x82\xc2\x8b\xea\xd5\x68\x97\x50\x78\x94\xdf\x31\xdd\xbd\x72\x26\xcf\xf0\x5d\xbe\x6d\xa5\x67\xf7\x6d\xe2\xcb\x50\xf4\x70\x7f\x0b\xf3\x0f\xcc\x8b\x8c\xce\xe0\x42\x7b\x3d\xf0\x2c\xa6\x0b\x90\x91\xb3\x4c\x96\xa7\x71\x53\xd0\x0c\xb0\x28\xb2\x13\x3b\x78\xa9\x9c\x95\x5d\xd5\xe3\x60\xd4\xff\x25\x30\xfe\xab\xb0\xb1\xef\xfb\x6d\x28\xe2\xa7\xf2\x38\x45\x7b\xa8\x60\xe7\x4a\xa8\x2b\x63\xf7\x10\x91\x36\xd9\x68\xf0\xe0\x47\xd8\xaf\xad\xdb\x63\xff\x0c\x3e\x03\x00\x00\xff\xff\x73\x84\x13\x49\x1e\x02\x00\x00")

func accountVerificationNotificationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_accountVerificationNotificationHtml,
		"account-verification-notification.html",
	)
}

func accountVerificationNotificationHtml() (*asset, error) {
	bytes, err := accountVerificationNotificationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "account-verification-notification.html", size: 542, mode: os.FileMode(436), modTime: time.Unix(1492353010, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _leaseApprovedHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x51\x6b\xdb\x30\x10\x7e\xcf\xaf\xb8\x96\xc2\x5a\xe8\xe2\xd7\x11\x54\xc3\x68\xc7\x56\x18\x6c\x6c\x19\x63\x4f\xe6\x62\x5f\x6c\x51\x59\x32\xd2\xa9\x99\x31\xfe\xef\x93\xa5\x38\x21\x59\x68\x5e\xa4\x9c\xbf\xfb\x4e\xf7\x7d\x77\xe2\xea\xe9\xdb\xe3\xfa\xcf\xf7\x4f\xd0\x70\xab\xf2\x85\x48\x47\x38\x09\xab\x7c\x01\xe1\x27\x5a\x62\x84\xb2\x41\xeb\x88\x1f\xae\x3d\x6f\xdf\x7f\xb8\xde\x7f\x62\xc9\x8a\x72\x91\xa5\x73\x21\xb2\x94\xb6\x10\x1b\x53\xf5\x7b\x4c\x97\x7f\xa1\x1e\x86\x61\x69\x76\x9a\x6c\x41\x2d\x4a\x35\x8e\xf7\xc0\x0d\xc1\xd6\x28\x65\x76\x52\xd7\xa0\x08\x1d\x41\x83\x0e\x36\x44\x1a\xb0\xeb\xac\x79\xa5\x6a\x29\xb2\x6e\xcf\xe3\x55\xba\xc4\x3f\x4a\xe6\x5f\x63\xc6\xf3\xd3\x0a\xc4\x26\x0f\xf4\x91\xa1\x90\xd5\x38\x8a\x6c\x13\xde\x14\x20\x27\xf8\xcf\xd6\xf8\x0e\xd6\x7d\x47\x73\x46\x3d\x45\x0a\x0e\x91\xb7\x73\x7e\x1d\x8b\xa4\x14\x7f\xb9\xca\x30\xc8\x2d\x2c\x71\xe7\x8a\xd2\x68\x46\x39\xb5\xab\xb1\x25\x18\xc7\x13\xd6\x8f\xbf\x7f\xc2\x01\x01\x13\x62\xa6\xff\x3f\xf7\x72\x1d\xd2\xd5\x19\xe7\x0f\xaa\xa5\xd1\x33\x8f\x25\x67\xbc\x2d\xa9\xb0\x31\x7c\x4e\x22\xb2\x49\xcc\xd9\x9e\x67\xed\x18\x75\x49\x0e\xd0\x39\x53\x4a\x64\xaa\x60\x27\xb9\x89\x16\x25\x63\x6e\xe3\x55\x3a\x86\x16\xfb\x60\x11\x48\x5d\x9a\xb6\x53\xc4\x74\xb7\xba\xec\xd1\x30\x80\x45\x5d\x13\xdc\xbc\x50\x7f\x0f\x37\xaf\xa8\x3c\xc1\xea\x01\x96\xf2\x50\xf0\xac\x09\xe1\xd8\x1a\x5d\x87\x0e\x66\xf8\xf4\xf2\x7d\xf0\x5c\x03\x08\x22\xcc\x04\xa7\x0d\xad\xc3\x5b\x4b\x6f\x2d\x69\x06\xfa\xdb\x49\x8b\x1c\x44\x00\xe9\x66\x79\x62\x90\x5c\x81\x9c\x94\x81\xdb\xc3\xfc\x54\x3e\xa1\xc7\x11\x70\xcb\xc1\x1e\xc9\xef\x1c\x94\x96\x62\xf4\xee\xd8\xea\x54\x06\xf5\x8b\x0b\x33\x6c\xc1\xbb\x69\x86\x1f\xa9\x94\xea\x2a\x42\xc2\x2a\xa4\x15\x98\x76\x22\xae\xd4\xbf\x00\x00\x00\xff\xff\x71\xf8\xf0\xbc\x6a\x03\x00\x00")

func leaseApprovedHtmlBytes() ([]byte, error) {
	return bindataRead(
		_leaseApprovedHtml,
		"lease-approved.html",
	)
}

func leaseApprovedHtml() (*asset, error) {
	bytes, err := leaseApprovedHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lease-approved.html", size: 874, mode: os.FileMode(436), modTime: time.Unix(1492351986, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _leaseExpiringHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x5d\x6b\xdb\x30\x14\x7d\xdf\xaf\xb8\x0d\x85\xb5\xd0\x25\xaf\xa3\xb8\x86\x91\x96\xad\x30\xd8\xd8\x32\xc6\x9e\xcc\xb5\x7d\x63\x8b\xc8\x92\x91\xae\xe7\x1a\xe3\xff\x3e\x49\xfe\x68\x92\x85\xb1\xa7\x28\x57\xe7\x9c\xfb\x71\xae\x15\x5d\x3d\x7e\xd9\xee\x7e\x7d\x7d\x82\x92\x2b\x19\xbf\x89\xc6\x1f\x80\xa8\x24\xcc\xfd\xc1\x1d\x2b\x62\x84\xac\x44\x63\x89\x1f\x56\x0d\xef\xdf\xbd\x5f\x4d\x57\x2c\x58\x52\x1c\x6d\xc6\x5f\xcf\xdb\xcc\xc4\x28\xd5\x79\x37\xc1\xea\xf8\x13\x75\xd0\xf7\x6b\xdd\x2a\x32\x09\x55\x28\xe4\x30\xdc\x01\x97\x04\x7b\x2d\xa5\x6e\x85\x2a\x40\x12\x5a\x02\x61\x81\x5e\x6a\x61\x5c\x64\x1d\x6d\xea\x49\xa1\x91\xe3\x21\xfc\x91\x22\xfe\x1c\xb0\xcf\x8f\xf7\x2e\x4f\xec\x84\x03\x37\x11\xf9\x30\x44\x9b\xd4\x15\xe4\x20\x27\xf8\x8f\x46\x37\x35\xec\xba\x9a\x66\x46\xe1\x23\x09\xbb\xc8\xbf\x39\x3f\x5e\x93\x8c\x94\xe6\x72\x96\xbe\x17\x7b\x58\x63\x6b\x93\x4c\x2b\x46\xe1\x1b\x55\x58\x11\x0c\xc3\x89\xea\x87\x9f\xdf\x61\x41\x80\x47\xcc\xf2\x7f\x73\x2f\xe7\x21\x95\x9f\x69\x7e\xa3\x42\x68\x35\xeb\x18\xb2\xba\x31\x19\x25\x26\x84\xcf\x45\xa2\x8d\x1f\xe6\x6c\xcc\xb3\xb2\x8c\x2a\x23\x0b\x68\xad\xce\x04\x32\xe5\xd0\x0a\x2e\x83\x39\xa3\x25\x37\xe1\x28\x2c\x43\x85\x1d\xa4\xce\x23\x95\xe9\xaa\x96\xc4\x74\x7b\x7f\xd9\xa3\xbe\x07\x83\xaa\x20\xb8\x3e\x50\x77\x07\xd7\xbf\x51\x36\x04\xf7\x0f\xb0\x16\x4b\xc2\xb3\x26\x22\xcb\x46\xab\xc2\x75\x30\xc3\x7d\xe5\x53\xf0\x7c\x06\xe0\x86\x30\x0b\x9c\x36\xb4\x5b\xca\x6e\xd1\x42\x66\x28\x74\xb4\xac\x48\xde\x18\xe4\x30\x15\xc0\x42\xc3\x8d\x56\xfe\x6e\x82\x25\xc8\xc3\x70\x7b\x07\xe8\xc4\x8f\xf6\x10\xac\xd6\xea\x68\x19\x4f\x92\x08\x29\xfd\x48\x98\x4c\x25\x54\xc8\xe5\x24\x47\x23\x02\x9f\x6c\x50\xf5\x1e\x80\xdb\x90\x4e\x37\x90\x6b\xf5\x96\xc1\x90\xa2\x16\x04\x8f\xc2\xb3\xf2\xd3\x0b\xfb\xd6\x5e\x87\x9f\x76\x8b\x9a\xbf\x49\xd2\x6e\x14\x73\x6e\x23\x94\x86\xf6\x0f\xab\xa5\xb9\x09\xd2\x18\xf7\x75\xad\x80\xd1\x14\xfe\x8b\x4d\x52\x89\xea\xb0\x8a\xb7\x52\x64\x07\x28\xc9\xb8\x6a\xb5\x17\x1d\xe1\xe3\x76\x60\x7c\x52\xc6\x6e\x6e\xe7\xa8\x12\x51\x55\x94\xfb\x05\x91\xdd\xa5\xe4\xcb\x04\xfe\x3b\xff\xc2\xb8\x5c\x42\xe9\x58\xd6\xbd\x0f\x06\x1a\xeb\x5d\xd8\x52\x26\xe4\xd5\x64\x83\xa3\x84\xf7\xc5\x3d\x38\xe1\xc9\xfa\x13\x00\x00\xff\xff\x41\x3f\x4f\xfc\xca\x04\x00\x00")

func leaseExpiringHtmlBytes() ([]byte, error) {
	return bindataRead(
		_leaseExpiringHtml,
		"lease-expiring.html",
	)
}

func leaseExpiringHtml() (*asset, error) {
	bytes, err := leaseExpiringHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lease-expiring.html", size: 1226, mode: os.FileMode(436), modTime: time.Unix(1492352150, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _leaseExtendedHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x51\x6b\xdb\x30\x10\x7e\xcf\xaf\xb8\x96\xc2\x5a\xe8\xe2\xd7\x11\x54\xc3\x68\xc7\x56\x18\x6c\x6c\x19\x63\x4f\xe6\x22\x5f\x6c\x51\x59\x32\xd2\x69\x99\x31\xfe\xef\x93\xe5\x38\x25\x5e\x58\x5e\xa4\x9c\xbf\xfb\x4e\xf7\x7d\x77\xe2\xea\xe9\xcb\xe3\xf6\xd7\xd7\x0f\x50\x73\xa3\xf3\x95\x98\x8e\x78\x12\x96\xf9\x0a\xe2\x4f\x34\xc4\x08\xb2\x46\xe7\x89\x1f\xae\x03\xef\xdf\xbe\xbb\x3e\x7e\x62\xc5\x9a\x72\x91\x4d\xe7\x4a\x64\x53\xda\x4a\xec\x6c\xd9\x1d\x31\x6d\xfe\x89\x3a\xe8\xfb\xb5\x3d\x18\x72\x05\x35\xa8\xf4\x30\xdc\x03\xd7\x04\x7b\xab\xb5\x3d\x28\x53\x81\x26\xf4\x04\x35\x7a\xd8\x11\x19\xa0\x3f\x4c\xa6\xa4\x72\x2d\xb2\xf6\xc8\x13\xf4\x74\x49\x7f\xb4\xca\x3f\xa7\x8c\xe7\xa7\x0d\x88\x5d\x1e\xe9\x13\x43\xa1\xca\x61\x10\xd9\x2e\xbe\x29\x42\xce\xf0\x1f\x9d\x0d\x2d\x6c\xbb\x96\xe6\x8c\x6a\x8c\x14\x1c\x23\xff\xcf\xf9\xf1\x5a\x64\x4a\x09\x97\xab\xf4\xbd\xda\xc3\x1a\x0f\xbe\x90\xd6\x30\xaa\xb1\x5d\x83\x0d\xc1\x30\x9c\xb1\xbe\xff\xf9\x1d\x4e\x08\x18\x11\x33\xfd\xbf\xb9\x97\xeb\x44\x6d\x16\x9c\xdf\xa8\x52\xd6\xcc\x3c\x8e\xbc\x0d\x4e\x52\xe1\x52\x78\x49\x22\xb2\x51\xcc\xd9\x9e\x67\xe3\x19\x8d\x24\x0f\xe8\xbd\x95\x0a\x99\x4a\x38\x28\xae\x93\x45\x93\x31\xb7\xe9\xaa\x3c\x43\x83\x5d\xb4\x08\x94\x91\xb6\x69\x35\x31\xdd\x6d\x2e\x7b\xd4\xf7\xe0\xd0\x54\x04\x37\x2f\xd4\xdd\xc3\xcd\x6f\xd4\x81\x60\xf3\x00\x6b\x75\x2a\xb8\x68\x42\x78\x76\xd6\x54\xb1\x83\x19\x3e\xbe\xfc\x18\x5c\x6a\x00\x51\x84\x99\xe0\xbc\xa1\x6d\x7c\xab\x0c\xce\x91\xe1\x38\x48\xad\x72\xc8\x51\x04\x50\x7e\x96\x27\x05\xc9\x17\xc8\x93\x32\x70\x7b\x9a\x9f\x32\x4c\xe8\x61\x00\xdc\x73\xb4\x47\xf1\x1b\x0f\xd2\x51\x8a\xde\xa5\x56\x5f\xeb\xa0\x79\xf1\x71\x88\x1d\x04\x3f\x0e\xf1\x23\x49\xa5\xaf\x12\x26\xd2\xa6\x15\x18\x77\x22\xad\xd4\xdf\x00\x00\x00\xff\xff\x85\xd2\x0a\xa9\x6a\x03\x00\x00")

func leaseExtendedHtmlBytes() ([]byte, error) {
	return bindataRead(
		_leaseExtendedHtml,
		"lease-extended.html",
	)
}

func leaseExtendedHtml() (*asset, error) {
	bytes, err := leaseExtendedHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lease-extended.html", size: 874, mode: os.FileMode(436), modTime: time.Unix(1492352300, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _leaseTerminatedHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\xc1\x8a\xdb\x30\x10\xbd\xe7\x2b\x66\x97\x3d\xec\x42\x1a\x5f\x4b\xd0\x1a\xca\x6e\x69\x17\x0a\x2d\x6d\x4a\xe9\xc9\x4c\xec\x89\x2d\x22\x4b\x46\x1a\xd7\x18\xe3\x7f\xaf\x24\xdb\x09\x49\x43\x73\x91\x33\x7a\xef\xcd\xcc\x9b\x91\xb8\x7b\xfd\xfa\xb2\xfb\xfd\xed\x23\x54\x5c\xab\x74\x25\xa6\xc3\x9f\x84\x45\xba\x02\xff\x13\x35\x31\x42\x5e\xa1\x75\xc4\xcf\xf7\x2d\x1f\xde\xbd\xbf\x9f\xaf\x58\xb2\xa2\x54\x24\xd3\xb9\x12\xc9\x44\x5b\x89\xbd\x29\xfa\x19\xd3\xa4\x9f\xa9\x87\x61\xd8\x98\x4e\x93\xcd\xa8\x46\xa9\xc6\x71\x0d\x5c\x11\x1c\x8c\x52\xa6\x93\xba\x04\x45\xe8\x08\x2a\x74\xb0\x27\xd2\xc0\x64\x6b\xa9\x91\xa9\xd8\x88\xa4\x99\x95\x5a\x35\x7d\xc4\x3f\x4a\xa6\x5f\x22\xe7\xed\x75\x0b\x62\x9f\xfa\x04\x51\x23\x93\xc5\x38\x8a\x64\xef\xab\xf2\x90\x0b\xfc\x27\x6b\xda\x06\x76\x7d\x43\x0b\xa3\x0c\x91\x8c\x7d\xe4\xff\x9c\x9f\xe7\x24\x13\xa5\xbd\x9d\x65\x18\xe4\x01\x36\xd8\xb9\x2c\x37\x9a\x51\x86\x86\x35\xd6\x04\xe3\x78\xa1\xfa\xe1\xd7\x0f\x38\x21\x20\x20\x16\xf9\x7f\xb9\xb7\xf3\x90\x2e\xae\x34\xbf\x53\x29\x8d\x5e\x74\x2c\x39\xd3\xda\x9c\x32\x1b\xc3\xd7\x22\x22\x09\x66\x2e\x03\x7a\xd3\x8e\x51\xe7\xe4\x00\x9d\x33\xb9\x0c\xbe\x43\x27\xb9\x8a\x43\x9a\x46\xf3\x18\x3f\xa5\x63\xa8\xb1\xf7\x43\x02\xa9\x73\x53\x37\x8a\x98\x9e\xb6\xb7\x67\x34\x0c\x60\x51\x97\x04\x0f\x47\xea\xd7\xf0\xf0\x07\x55\x4b\xb0\x7d\x86\x8d\x3c\x25\xbc\x6a\x42\x38\xb6\x46\x97\xbe\x83\x05\x1e\x2a\x9f\x83\xd7\x1e\x80\x37\x61\x11\xb8\x6c\x68\x77\x2a\xbb\xf3\x1b\x95\x5b\x8a\x1d\x9d\x56\xa4\x68\x2d\x72\x74\x05\xb0\x34\xf0\x68\x74\xb8\x9b\x61\x19\xf2\x38\x3e\xad\x01\xbd\x78\x60\x9f\x57\x11\x3c\x6e\x72\xf7\x1c\x8b\xe8\xe0\xed\xb4\xa7\xe7\x02\x50\x1f\x9d\xdf\x6f\x0b\xad\x0b\xfb\xfd\x42\xb9\x54\x77\x11\xe3\xd1\xf1\x75\x84\xe7\x12\x5f\xdb\xdf\x00\x00\x00\xff\xff\xbc\x9c\x68\x67\x85\x03\x00\x00")

func leaseTerminatedHtmlBytes() ([]byte, error) {
	return bindataRead(
		_leaseTerminatedHtml,
		"lease-terminated.html",
	)
}

func leaseTerminatedHtml() (*asset, error) {
	bytes, err := leaseTerminatedHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lease-terminated.html", size: 901, mode: os.FileMode(436), modTime: time.Unix(1492352310, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _misconfigurationNoticeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\xb1\xae\x83\x30\x0c\x45\xf7\x7c\x85\x1f\x3b\x64\x7d\xaa\xdc\x2c\x14\xa9\x5b\x3b\x74\xe9\x18\xc0\x14\x4b\x50\x22\x63\x06\x84\xf8\xf7\x52\x82\xea\xe5\x0c\xd7\xf7\xd8\xf8\x77\xb9\xe5\x8f\xe7\xbd\x80\x56\xfb\xce\x19\x8c\xd8\x48\xbe\x76\x06\xb6\xc1\x9e\xd4\x43\xd5\x7a\x19\x49\xcf\xc9\xa4\x4d\xfa\x9f\x1c\x91\xb2\x76\xe4\xd0\x46\x1a\xb4\xb1\x66\xb0\x1c\xea\xf9\xd8\x09\xee\x4a\x33\xb0\x82\x0f\x81\x36\x09\x68\xeb\x15\x72\xaa\xb8\x03\x1e\xa1\xe7\x31\xad\x86\x77\xc3\xaf\x49\xa8\xce\xd0\x86\x5f\xaf\x10\x19\xe4\x04\x58\x8a\x5b\x96\x8c\x44\xd6\x75\x8f\xd1\x46\xfd\xf7\xde\xfe\xee\x27\x00\x00\xff\xff\x44\x5e\x3e\x9c\xc6\x00\x00\x00")

func misconfigurationNoticeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_misconfigurationNoticeHtml,
		"misconfiguration-notice.html",
	)
}

func misconfigurationNoticeHtml() (*asset, error) {
	bytes, err := misconfigurationNoticeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "misconfiguration-notice.html", size: 198, mode: os.FileMode(436), modTime: time.Unix(1492352356, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _newLeaseNoOwnerTagHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xc1\x8a\xdb\x30\x10\xbd\xe7\x2b\x66\x73\x69\x16\xd2\xe4\x5a\x8a\xd7\xb0\x64\x4b\xbb\x50\xd8\xd2\xa6\x94\x9e\xcc\xd8\x1e\xdb\x62\x65\xc9\x48\x72\x52\x13\xfc\xef\x1d\x49\x8e\x4b\xd2\x50\x9a\x8b\x9c\xd1\xbc\x37\x6f\xe6\x69\x92\xbb\xa7\x97\xdd\xfe\xe7\x97\x0f\xd0\xb8\x56\xa6\x8b\x24\x1e\x7c\x12\x96\xe9\x02\xf8\x97\xb4\xe4\x10\x8a\x06\x8d\x25\xf7\xb0\xec\x5d\xf5\xf6\xdd\x72\xba\x72\xc2\x49\x4a\x93\x6d\x3c\x17\xc9\x36\xc2\x16\x49\xae\xcb\x61\xca\xe9\xd2\x4f\x34\xc0\xe9\xb4\xd1\x47\x45\x26\xa3\x16\x85\x1c\xc7\x35\xb8\x86\xa0\xd2\x52\xea\xa3\x50\x35\x48\x42\x4b\xd0\xa0\x85\x9c\x48\x41\x61\x08\x1d\x95\x90\x0f\x60\x75\x4b\x5a\xd1\x26\xd9\x76\x13\x63\x2f\xe3\x47\xf8\x23\x45\xfa\x39\x60\x9f\x9f\xde\x43\x92\xa7\x5c\x28\x70\x65\xa2\x1c\xc7\x64\x9b\xb3\x3a\x4e\xb9\xc8\xff\x68\x74\xdf\xc1\x7e\xe8\xe8\x8c\xa8\x7d\x24\x73\x1c\xf9\x37\xe6\xfb\x9f\x22\x11\xd2\xdf\xae\x72\x3a\x89\x0a\x36\x78\xb4\x59\xa1\x95\x43\xe1\x1b\x57\xd8\x12\x8c\xe3\x05\xeb\xe3\x8f\x6f\x30\x67\x80\xcf\x38\xd3\xff\x8d\xbd\x5d\x87\x54\x79\xc5\xf9\x95\x6a\xa1\xd5\x99\xc7\x90\xd5\xbd\x29\x28\x33\x21\x7c\x4d\x92\x6c\xfd\x30\xcf\x46\x3d\x3b\x28\x35\x59\x50\xda\xb1\x15\x07\x02\x84\x03\x4a\x51\xc2\x8e\x0a\x21\x5f\xbc\x7f\xe0\xb0\x5e\xb3\x27\x70\xe4\x5b\x6b\x45\xad\xd8\x25\xe1\xc0\x69\x18\x74\x0f\x2b\xef\x2a\x96\xad\x50\xf7\xd1\xb0\x99\xba\x0a\xac\xd8\x75\x46\x1f\xa8\x5c\x7b\xcc\x51\x48\xc9\x76\x83\x23\xc3\x80\xe0\x37\xba\x49\x37\xfd\xea\x04\x6b\xcf\xd0\x45\xc9\xb0\x9a\x8d\x2d\x7b\x83\x2e\xf4\x02\x58\x31\x96\xa9\xde\xd8\xf8\x62\x38\x7a\x55\x77\x7f\xe6\x06\xd1\xb6\x54\x0a\xfe\x92\x03\x0f\x07\xa1\x31\x54\x3d\x2c\x67\xd6\x59\x44\xd6\x1b\x7e\x9f\x4b\x6e\xd4\xd4\xfe\xc1\x67\xb9\x44\xf5\xba\x4c\x77\x52\x14\xaf\xd0\x90\x21\xdf\x2c\xab\x9c\x11\x71\xa4\x98\x5e\x14\x7e\x8c\x9d\xc2\xca\x8f\x65\xee\x94\xa7\x13\xd6\xe0\xfe\x96\x84\x69\x38\xff\x2d\x60\xca\xbf\x59\x7e\xdf\x30\xc6\xf2\x82\x19\xe8\xad\x5f\xb0\x60\xe1\x5d\xcc\x61\x44\xd8\x4f\xbf\xb0\x61\xdf\x7f\x07\x00\x00\xff\xff\xfd\xd0\x48\xee\x07\x04\x00\x00")

func newLeaseNoOwnerTagHtmlBytes() ([]byte, error) {
	return bindataRead(
		_newLeaseNoOwnerTagHtml,
		"new-lease-no-owner-tag.html",
	)
}

func newLeaseNoOwnerTagHtml() (*asset, error) {
	bytes, err := newLeaseNoOwnerTagHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "new-lease-no-owner-tag.html", size: 1031, mode: os.FileMode(436), modTime: time.Unix(1492352481, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _newLeaseOwnerTagNotWhitelistedHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4f\x8b\xdb\x3e\x10\xbd\xe7\x53\xcc\xe6\xf2\xdb\x85\xfd\x25\xd7\x52\xbc\x86\x25\x5b\xda\x85\xc2\x96\x36\xa5\xf4\x64\xc6\xf6\xd8\x16\x2b\x4b\x46\x92\xeb\x9a\xe0\xef\xde\x91\x64\xbb\x24\x0d\xa5\xb9\xe8\x4f\xe6\xbd\x99\x37\x4f\xe3\xe4\xe6\xe9\xe5\x70\xfc\xfe\xe9\x1d\x34\xae\x95\xe9\x26\x89\x0b\xaf\x84\x65\xba\x01\xfe\x25\x2d\x39\x84\xa2\x41\x63\xc9\x3d\x6c\x7b\x57\xfd\xff\x66\x3b\xff\xe5\x84\x93\x94\x26\xfb\xb8\x6e\x92\x7d\x84\x6d\x92\x5c\x97\xe3\x1c\xd3\xa5\x1f\x68\x84\xd3\x69\xa7\x07\x45\x26\xa3\x16\x85\x9c\xa6\x7b\x70\x0d\x41\xa5\xa5\xd4\x83\x50\x35\x48\x42\x4b\xd0\xa0\x85\x9c\x48\x41\x61\x08\x1d\x95\x90\x8f\x60\x75\x4b\x5a\xd1\x2e\xd9\x77\x33\x63\x2f\xe3\x26\x1c\xa4\x48\x3f\x06\xec\xf3\xd3\x5b\x48\xf2\x94\x13\x05\xae\x4c\x94\xd3\x94\xec\x73\xae\x8e\x43\xce\xe2\xdf\x1b\xdd\x77\x70\x1c\x3b\x5a\x10\xb5\xbf\xc9\x1c\xdf\xfc\x1d\xf3\xf5\x77\x92\x08\xe9\xaf\x67\x39\x9d\x44\x05\x3b\x1c\x6c\x56\x68\xe5\x50\x78\xe1\x0a\x5b\x82\x69\x3a\x63\x7d\xfc\xf6\x05\xd6\x08\xf0\x11\x0b\xfd\x9f\xd8\xeb\x79\x48\x95\x17\x9c\x9f\xa9\x16\x5a\x2d\x3c\x86\xac\xee\x4d\x41\x99\x09\xd7\x97\x24\xc9\xde\x37\x73\x31\xea\xc8\x96\x1c\xa8\x10\xf2\xc5\x5b\x05\x0e\x6b\xd0\x8a\x8d\x12\x16\x84\xb2\x0e\x55\x41\xc0\x7b\xa5\x1d\x9f\x83\x81\x43\x23\x1c\x49\x61\xdd\x3d\xfb\x04\x03\x01\x5a\x2b\x6a\xc5\xce\x09\x07\x4e\xc3\xa8\x7b\xb8\xf5\x81\x58\xb6\x42\xdd\x45\x13\x97\x74\xcf\x55\xa0\xc2\xae\x33\xfa\x07\x95\xf7\x1e\x33\x08\x29\xf9\x09\x80\x23\xc3\x80\xf0\x06\xd0\xcd\x5a\xe8\x67\x27\x58\x4f\x86\x2e\xca\x80\xdb\xd5\xec\xb2\x37\xe8\x82\x3e\xc0\x8a\xb1\x4c\xf5\x9f\x8d\xaf\x88\x6f\x2f\xf2\x1e\x17\x6e\x10\x6d\x4b\xa5\xe0\x9d\x1c\xb9\x61\x08\x8d\xa1\xea\x61\xbb\xb2\xae\x45\x64\xbd\xe1\x37\xbb\xe5\x8e\x98\xda\x0f\x41\x96\x4b\x54\xaf\xdb\xf4\x20\x45\xf1\x0a\x0d\x19\xf2\x62\xb9\xca\x15\x11\xdb\x8c\xe9\x59\xe2\xc7\xa8\x14\x6e\x7d\x5b\x56\xa5\xdc\x9d\x30\x1a\x77\xd7\x4a\x98\x9b\xf3\xcf\x05\xcc\xf1\x57\xd3\x1f\x1b\xc6\x58\x1e\x3a\x03\xbd\xf5\x43\x17\xbc\xbe\x89\x31\x8c\x08\x33\xeb\x87\x38\x7c\x03\x7e\x05\x00\x00\xff\xff\x40\xd5\x18\x10\x1b\x04\x00\x00")

func newLeaseOwnerTagNotWhitelistedHtmlBytes() ([]byte, error) {
	return bindataRead(
		_newLeaseOwnerTagNotWhitelistedHtml,
		"new-lease-owner-tag-not-whitelisted.html",
	)
}

func newLeaseOwnerTagNotWhitelistedHtml() (*asset, error) {
	bytes, err := newLeaseOwnerTagNotWhitelistedHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "new-lease-owner-tag-not-whitelisted.html", size: 1051, mode: os.FileMode(436), modTime: time.Unix(1492352598, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _newLeaseValidOwnerTagNeedsApprovalHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x5f\x6b\xdb\x3e\x14\x7d\xcf\xa7\xb8\xf5\xcb\xaf\x3f\xc8\xea\xd7\x31\x5c\x43\x69\xc7\x36\x18\xb4\x6c\x1d\x63\x4f\xe6\xda\xbe\x8e\x45\x64\xc9\x48\x72\x3c\x13\xfc\xdd\x77\x25\x39\x5e\xd3\x85\xb1\xbc\x28\x96\xee\xb9\x7f\xce\x39\x52\x76\xf5\xf0\x78\xff\xfc\xe3\xe9\x3d\xb4\xae\x93\xf9\x26\x8b\x0b\xaf\x84\x75\xbe\x01\xfe\x65\x1d\x39\x84\xaa\x45\x63\xc9\xdd\x26\x83\x6b\xde\xbc\x4d\x96\x23\x27\x9c\xa4\x3c\x4b\xe3\xba\xc9\xd2\x08\xdb\x64\xa5\xae\xa7\x25\xa6\xcf\x3f\xd2\x04\xc7\xe3\x8d\x1e\x15\x99\x82\x3a\x14\x72\x9e\xb7\xe0\x5a\x82\x46\x4b\xa9\x47\xa1\x76\x20\x09\x2d\x41\x8b\x16\x4a\x22\x05\x95\x21\x74\x54\x43\x39\xc1\xa4\x07\xb8\xd6\x06\xac\xee\x48\x2b\x02\x92\x1c\x38\x58\x0f\xe2\x23\x03\xf7\x54\x09\xf9\xe8\x73\x83\xc3\x1d\xa4\xb0\xa7\x49\x61\x47\xff\xdf\x64\x69\xbf\xf4\x30\xc8\xf8\x27\x7c\x48\x91\x7f\x0e\xd5\x3e\x3d\xbc\x83\xac\xcc\xb9\xb5\x50\xbd\x10\xf5\x3c\x67\x69\xc9\xf3\x70\xc8\x59\xfc\x07\xa3\x87\x1e\x9e\xa7\x9e\x4e\x88\x9d\xdf\x29\x1c\xef\xfc\x1d\xf3\xed\x77\x91\x08\x19\x2e\x57\x39\x1e\x45\x03\x37\x38\xda\xa2\xd2\xca\xa1\xf0\x54\xf9\x29\x60\x9e\xcf\xb2\xde\x7d\xff\x0a\x6b\x04\xf8\x88\x53\xfa\x3f\xb1\x97\xeb\x90\xaa\x5f\xe5\xfc\x42\x3b\xa1\xd5\x29\x8f\x21\xcb\xb4\x56\x54\x98\xb0\xfd\x3a\x49\x96\x7a\x32\x4f\xd2\xde\xb9\xa0\xa3\x13\xdc\xa9\x6e\x60\x34\xc2\x79\x61\x5c\x2b\x2c\x04\xa5\xb7\x41\xbf\x16\x0f\xe4\x2d\xa0\x0a\xdd\x14\x58\x39\x71\xa0\x22\x70\x6e\xe7\x19\xe2\x77\x74\x80\xdd\xb2\xce\x30\x12\x28\x62\xf5\x83\xbe\xd8\xf7\x46\x1f\x50\xb2\x59\x4c\x4c\xcc\x2e\x78\xa1\x6d\x9f\x3f\x45\xf3\x54\x52\x54\x7b\x3e\x84\xe4\x2e\x40\x28\x01\xa7\x17\x38\x45\x64\x08\xdc\x82\xe6\x9e\xcd\x28\x18\x23\x1c\x8c\x42\x4a\x36\x1d\x38\x32\x9d\x50\xc1\x75\xe8\x16\x2e\xe8\x67\x2f\x98\x8f\x02\x5d\xa4\x01\xae\x57\xb3\xd4\x83\x41\x17\xf8\x01\x6c\x18\xcb\xa9\xfe\xb3\xd1\xb7\xbc\xbb\x98\x6f\xa5\x29\x36\xc1\x14\x23\xb4\x86\x9a\xdb\x64\xcd\xb3\xf4\x57\x0c\x86\x6f\x05\x77\x8c\x66\xe7\xaf\x59\x51\x4a\x54\xfb\x24\xbf\x0f\x43\x71\xbb\xe4\x87\xe1\xae\x96\xf8\x28\x0a\xe6\x2f\x79\x78\x3e\x4d\x00\xa2\xeb\xa8\x16\xfc\x4f\x4e\x97\x6a\xae\xa3\xfe\x73\xd5\x15\x71\x56\x77\x2d\xdc\x32\xca\x06\x81\xe2\xc5\x0c\x77\xf2\x2a\xc6\x30\x22\x3c\x06\xfe\x75\x08\x8f\xcb\xaf\x00\x00\x00\xff\xff\xc8\xeb\xf7\x12\x74\x04\x00\x00")

func newLeaseValidOwnerTagNeedsApprovalHtmlBytes() ([]byte, error) {
	return bindataRead(
		_newLeaseValidOwnerTagNeedsApprovalHtml,
		"new-lease-valid-owner-tag-needs-approval.html",
	)
}

func newLeaseValidOwnerTagNeedsApprovalHtml() (*asset, error) {
	bytes, err := newLeaseValidOwnerTagNeedsApprovalHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "new-lease-valid-owner-tag-needs-approval.html", size: 1140, mode: os.FileMode(436), modTime: time.Unix(1492352697, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _newLeaseValidOwnerTagNoApprovalNeededHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x51\x8b\xd4\x30\x10\x7e\xdf\x5f\x31\xd7\x17\x4f\xd0\xed\xab\x48\xae\x20\x7b\xa2\x82\x70\xa2\x2b\x72\x4f\x65\xda\x4e\xdb\xb0\x69\x52\x92\x94\xb5\x2c\xfd\xef\x4e\x9a\xb6\xb2\xe7\x62\x5f\x92\x4e\xe6\xfb\xbe\xc9\xcc\x17\x71\xf7\xf8\x74\x38\x3e\x7f\xfb\x08\xad\xef\x54\xb6\x13\x71\xe1\x95\xb0\xca\x76\xc0\x9f\xe8\xc8\x23\x94\x2d\x5a\x47\xfe\x21\x19\x7c\xfd\xf6\x5d\xb2\x1c\x79\xe9\x15\x65\x22\x8d\xeb\x4e\xa4\x11\xb6\x13\x85\xa9\xc6\x25\xa7\xcf\x3e\xd3\x08\x97\xcb\xde\x9c\x35\xd9\x9c\x3a\x94\x6a\x9a\xde\x80\x6f\x09\x6a\xa3\x94\x39\x4b\xdd\x80\x22\x74\x04\x2d\x3a\x28\x88\x34\x94\x96\xd0\x53\x05\xc5\x08\xa3\x19\xe0\xde\x58\x70\xa6\x23\xa3\x09\x48\x71\xe2\xe0\x02\x88\x8f\x2c\x1c\xa8\x94\xea\x29\x70\x83\xc7\x06\x52\x38\xd1\xa8\xb1\xa3\xd7\x7b\x91\xf6\x4b\x0d\x83\x8a\x9b\xf9\x47\xc9\xec\xeb\xac\xf6\xe5\xf1\x3d\x88\x22\xe3\xd2\x66\xf5\x5c\x56\xd3\x24\xd2\x82\xef\xc3\x29\x57\xf9\x9f\xac\x19\x7a\x38\x8e\x3d\xad\x88\x26\x44\x72\xcf\x91\xff\x63\x7e\xfe\x15\x89\x90\xe1\xb6\xca\xe5\x22\x6b\xd8\xe3\xd9\xe5\xa5\xd1\x1e\x65\x68\x55\xb8\x05\x4c\xd3\x15\xeb\x87\x5f\x3f\x60\xcb\x80\x90\xb1\xd2\xff\x8b\xbd\xad\x43\xba\x7a\xc1\xf9\x9d\x1a\x69\xf4\xca\x63\xc9\x71\x5b\x4b\xca\xed\x1c\x7e\x49\x22\xd2\xd0\xcc\x75\xb4\xcf\x61\x02\x52\x3b\x8f\xba\x24\x38\x4b\xa5\x78\x7e\xe0\xc9\x76\x52\xcf\x03\x44\xbf\xd0\xd2\xef\x5e\x32\x75\x8e\x3e\x32\xc2\xfd\xd6\xf7\x6a\xb0\xe8\x67\x29\xc0\x9a\xb1\x20\xfd\x2b\x17\x2d\xc0\xd1\x65\x8e\xab\xe2\x71\xe5\x06\xd9\x75\x54\x49\xde\xa9\x91\x6b\x47\x68\x2d\xd5\x0f\xc9\xc6\xba\x15\x91\x0f\x96\x0d\x97\xb0\x3b\x6c\x13\x1c\x9c\x17\x0a\xf5\x29\xc9\x0e\x4a\x96\x27\x68\xc9\x72\xc1\x26\x54\xb9\x21\xe2\x8d\x31\xbb\x16\x6e\x19\xe5\xd8\xb2\x76\x71\xdf\x6c\xbc\xbb\x98\xc3\x88\xd9\xf1\xe1\x09\xcc\x2f\xe8\x4f\x00\x00\x00\xff\xff\x14\xe0\x84\x3c\x59\x03\x00\x00")

func newLeaseValidOwnerTagNoApprovalNeededHtmlBytes() ([]byte, error) {
	return bindataRead(
		_newLeaseValidOwnerTagNoApprovalNeededHtml,
		"new-lease-valid-owner-tag-no-approval-needed.html",
	)
}

func newLeaseValidOwnerTagNoApprovalNeededHtml() (*asset, error) {
	bytes, err := newLeaseValidOwnerTagNoApprovalNeededHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "new-lease-valid-owner-tag-no-approval-needed.html", size: 857, mode: os.FileMode(436), modTime: time.Unix(1492352835, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regionSuccessfullySetupHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\xbf\x72\xf3\x20\x10\xc4\x7b\x3d\xc5\xd9\xb5\x3f\xab\xfd\x0a\x42\xe3\x24\x93\x2e\x29\xdc\xa4\xf2\x1c\xd2\x49\xdc\x04\x0e\x0d\x7f\xc6\xa3\xf1\xe8\xdd\x43\x24\xa5\x08\xcd\x0e\x2c\xc7\x6f\x17\x75\x78\x7e\xbf\x5c\x3f\x3f\x5e\xc0\x66\xef\x74\xa3\x36\xa9\x4a\xd8\xeb\x06\xea\x52\x9e\x32\x42\x67\x31\x26\xca\x4f\xc7\x92\x87\x7f\xff\x8f\xbb\x95\x39\x3b\xd2\xaa\xdd\xb4\x51\xed\x36\xd6\x28\x13\xfa\x79\xbf\x33\xe9\x37\x9a\xe1\xf1\x38\x63\xef\x59\x6e\xe4\x91\xdd\xb2\x9c\x20\x5b\x82\x48\x23\x07\x01\x65\x74\xf5\xb7\xcd\x4d\xd0\xd3\xb2\xa8\xd6\x68\xb0\x98\xc0\x10\x09\xa4\xd2\x75\x94\xd2\x50\x9c\x9b\xa1\xc6\x28\xd3\x41\xb5\x53\x05\xed\x84\xd7\x18\x3c\x48\xb8\x43\x90\x13\xa0\x73\xc0\x92\x32\x4a\x9d\xa9\x27\x95\xc4\xe9\x17\x75\xe7\xea\x1a\x02\x1f\x84\x73\x88\xd4\x83\x99\xd7\x28\x63\xc1\xd8\x33\xca\xf9\xcf\xc3\x57\x8b\xf2\x95\x60\x08\x11\x4a\x62\x19\xe1\x42\x1d\xbb\x1d\x5e\x33\xae\x35\x7f\x7a\xaf\xdf\xf6\x1d\x00\x00\xff\xff\x70\x7d\x78\xe3\x4e\x01\x00\x00")

func regionSuccessfullySetupHtmlBytes() ([]byte, error) {
	return bindataRead(
		_regionSuccessfullySetupHtml,
		"region-successfully-setup.html",
	)
}

func regionSuccessfullySetupHtml() (*asset, error) {
	bytes, err := regionSuccessfullySetupHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "region-successfully-setup.html", size: 334, mode: os.FileMode(436), modTime: time.Unix(1492352820, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"account-verification-notification.html": accountVerificationNotificationHtml,
	"lease-approved.html": leaseApprovedHtml,
	"lease-expiring.html": leaseExpiringHtml,
	"lease-extended.html": leaseExtendedHtml,
	"lease-terminated.html": leaseTerminatedHtml,
	"misconfiguration-notice.html": misconfigurationNoticeHtml,
	"new-lease-no-owner-tag.html": newLeaseNoOwnerTagHtml,
	"new-lease-owner-tag-not-whitelisted.html": newLeaseOwnerTagNotWhitelistedHtml,
	"new-lease-valid-owner-tag-needs-approval.html": newLeaseValidOwnerTagNeedsApprovalHtml,
	"new-lease-valid-owner-tag-no-approval-needed.html": newLeaseValidOwnerTagNoApprovalNeededHtml,
	"region-successfully-setup.html": regionSuccessfullySetupHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"account-verification-notification.html": &bintree{accountVerificationNotificationHtml, map[string]*bintree{}},
	"lease-approved.html": &bintree{leaseApprovedHtml, map[string]*bintree{}},
	"lease-expiring.html": &bintree{leaseExpiringHtml, map[string]*bintree{}},
	"lease-extended.html": &bintree{leaseExtendedHtml, map[string]*bintree{}},
	"lease-terminated.html": &bintree{leaseTerminatedHtml, map[string]*bintree{}},
	"misconfiguration-notice.html": &bintree{misconfigurationNoticeHtml, map[string]*bintree{}},
	"new-lease-no-owner-tag.html": &bintree{newLeaseNoOwnerTagHtml, map[string]*bintree{}},
	"new-lease-owner-tag-not-whitelisted.html": &bintree{newLeaseOwnerTagNotWhitelistedHtml, map[string]*bintree{}},
	"new-lease-valid-owner-tag-needs-approval.html": &bintree{newLeaseValidOwnerTagNeedsApprovalHtml, map[string]*bintree{}},
	"new-lease-valid-owner-tag-no-approval-needed.html": &bintree{newLeaseValidOwnerTagNoApprovalNeededHtml, map[string]*bintree{}},
	"region-successfully-setup.html": &bintree{regionSuccessfullySetupHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

