consumes:
- application/json
definitions:
  AddCloudaccountPayload:
    properties:
      aws_id:
        minLength: 1
        type: string
      default_lease_duration:
        type: string
    required:
    - aws_id
    title: AddCloudaccountPayload
    type: object
  AddWhitelistedOwnerCloudaccountPayload:
    properties:
      email:
        format: email
        type: string
      key_name:
        type: string
    required:
    - email
    title: AddWhitelistedOwnerCloudaccountPayload
    type: object
  CreateAccountPayload:
    properties:
      email:
        format: email
        type: string
      name:
        maxLength: 30
        minLength: 1
        type: string
      surname:
        maxLength: 30
        minLength: 1
        type: string
    required:
    - email
    - name
    - surname
    title: CreateAccountPayload
    type: object
  DeleteWhitelistedOwnerCloudaccountPayload:
    properties:
      email:
        format: email
        type: string
      key_name:
        type: string
    required:
    - email
    title: DeleteWhitelistedOwnerCloudaccountPayload
    type: object
  MailerConfigAccountPayload:
    properties:
      api_key:
        minLength: 1
        type: string
      domain:
        minLength: 1
        type: string
      from_name:
        minLength: 1
        type: string
      public_api_key:
        minLength: 1
        type: string
    required:
    - domain
    - api_key
    - public_api_key
    - from_name
    title: MailerConfigAccountPayload
    type: object
  NewApiTokenAccountPayload:
    properties:
      email:
        format: email
        type: string
    required:
    - email
    title: NewApiTokenAccountPayload
    type: object
  OrderInstancesReportReportPayload:
    properties:
      minimum_lease_age:
        type: string
      recipients:
        items:
          type: string
        type: array
    required:
    - minimum_lease_age
    title: OrderInstancesReportReportPayload
    type: object
  SlackConfigAccountPayload:
    properties:
      channel_id:
        minLength: 1
        type: string
      token:
        minLength: 1
        type: string
    required:
    - token
    - channel_id
    title: SlackConfigAccountPayload
    type: object
  SubscribeSNSToSQSCloudaccountPayload:
    properties:
      regions:
        items:
          type: string
        type: array
    required:
    - regions
    title: SubscribeSNSToSQSCloudaccountPayload
    type: object
  UpdateCloudaccountPayload:
    properties:
      aws_id:
        minLength: 1
        type: string
      default_lease_duration:
        type: string
    required:
    - default_lease_duration
    title: UpdateCloudaccountPayload
    type: object
  UpdateWhitelistedOwnerCloudaccountPayload:
    properties:
      email:
        format: email
        type: string
      key_name:
        type: string
    required:
    - email
    title: UpdateWhitelistedOwnerCloudaccountPayload
    type: object
  VerifyAccountPayload:
    properties:
      verification_token:
        minLength: 108
        type: string
    required:
    - verification_token
    title: VerifyAccountPayload
    type: object
externalDocs:
  description: Cecil APIs docs
  url: ""
host: 127.0.0.1:8080
info:
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Cecil APIs
  version: "0.1"
paths:
  /:
    get:
      description: Show info about API
      operationId: root#show
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      summary: show root
      tags:
      - root
  /accounts:
    post:
      description: Create new account
      operationId: account#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateAccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      summary: create account
      tags:
      - account
  /accounts/{account_id}:
    get:
      description: |-
        Show account

        Required security scopes:
          * `api:access`
      operationId: account#show
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: show account
      tags:
      - account
  /accounts/{account_id}/api_token:
    post:
      description: Verify account and get API token
      operationId: account#verify
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/VerifyAccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      summary: verify account
      tags:
      - account
  /accounts/{account_id}/cloudaccounts:
    post:
      description: |-
        Add new cloudaccount

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#add
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddCloudaccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: add cloudaccount
      tags:
      - cloudaccount
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}:
    get:
      description: |-
        Show cloudaccount

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#show
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: show cloudaccount
      tags:
      - cloudaccount
    patch:
      description: |-
        Update a cloudaccount

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#update
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateCloudaccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: update cloudaccount
      tags:
      - cloudaccount
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/leases:
    get:
      description: |-
        List all leases for a Cloudaccount

        Required security scopes:
          * `api:access`
      operationId: leases#listLeasesForCloudaccount
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - in: query
        name: terminated
        required: false
        type: boolean
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: listLeasesForCloudaccount leases
      tags:
      - leases
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/leases/{lease_id}:
    get:
      description: |-
        Show a lease

        Required security scopes:
          * `api:access`
      operationId: leases#show
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - description: Lease ID
        in: path
        minimum: 1
        name: lease_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: show leases
      tags:
      - leases
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/leases/{lease_id}/delete:
    post:
      description: |-
        Delete a lease from DB

        Required security scopes:
          * `api:access`
      operationId: leases#deleteFromDB
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - description: Lease ID
        in: path
        minimum: 1
        name: lease_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: deleteFromDB leases
      tags:
      - leases
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/leases/{lease_id}/expiry:
    post:
      description: |-
        Set expiry of a lease

        Required security scopes:
          * `api:access`
      operationId: leases#setExpiry
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - description: Target expiry datetime
        in: query
        name: expires_at
        required: true
        type: string
      - description: Lease ID
        in: path
        minimum: 1
        name: lease_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: setExpiry leases
      tags:
      - leases
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/leases/{lease_id}/terminate:
    post:
      description: |-
        Terminate a lease

        Required security scopes:
          * `api:access`
      operationId: leases#terminate
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - description: Lease ID
        in: path
        minimum: 1
        name: lease_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: terminate leases
      tags:
      - leases
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/owners:
    delete:
      description: |-
        Delete a whitelisted owner

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#deleteWhitelistedOwner
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/DeleteWhitelistedOwnerCloudaccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: deleteWhitelistedOwner cloudaccount
      tags:
      - cloudaccount
    get:
      description: |-
        List whitelisted owners

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#listWhitelistedOwners
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: listWhitelistedOwners cloudaccount
      tags:
      - cloudaccount
    patch:
      description: |-
        Modify a whitelisted owner

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#updateWhitelistedOwner
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateWhitelistedOwnerCloudaccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: updateWhitelistedOwner cloudaccount
      tags:
      - cloudaccount
    post:
      description: |-
        Add new email (plus optional KeyName) to owner tag whitelist

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#addWhitelistedOwner
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddWhitelistedOwnerCloudaccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: addWhitelistedOwner cloudaccount
      tags:
      - cloudaccount
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/regions:
    get:
      description: |-
        List all regions and their status

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#listRegions
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: listRegions cloudaccount
      tags:
      - cloudaccount
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/reports/generated/{report_uuid}:
    get:
      description: |-
        Show a single report

        Required security scopes:
          * `api:access`
      operationId: report#showReport
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - description: Report UUID
        in: path
        name: report_uuid
        required: true
        type: string
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: showReport report
      tags:
      - report
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/reports/instances:
    post:
      description: |-
        Order the creation of a report about instances

        Required security scopes:
          * `api:access`
      operationId: report#orderInstancesReport
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/OrderInstancesReportReportPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: orderInstancesReport report
      tags:
      - report
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/subscribe-sns-to-sqs:
    post:
      description: |-
        Subscribe SNS to SQS

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#subscribeSNSToSQS
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SubscribeSNSToSQSCloudaccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: subscribeSNSToSQS cloudaccount
      tags:
      - cloudaccount
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/tenant-aws-initial-setup.template:
    get:
      description: |-
        Download AWS initial setup cloudformation template

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#downloadInitialSetupTemplate
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: downloadInitialSetupTemplate cloudaccount
      tags:
      - cloudaccount
  /accounts/{account_id}/cloudaccounts/{cloudaccount_id}/tenant-aws-region-setup.template:
    get:
      description: |-
        Download AWS region setup cloudformation template

        Required security scopes:
          * `api:access`
      operationId: cloudaccount#downloadRegionSetupTemplate
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: path
        minimum: 1
        name: cloudaccount_id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: downloadRegionSetupTemplate cloudaccount
      tags:
      - cloudaccount
  /accounts/{account_id}/leases:
    get:
      description: |-
        List all leases for account

        Required security scopes:
          * `api:access`
      operationId: leases#listLeasesForAccount
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - in: query
        name: terminated
        required: false
        type: boolean
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: listLeasesForAccount leases
      tags:
      - leases
  /accounts/{account_id}/leases/{lease_id}:
    get:
      description: |-
        Show a lease

        Required security scopes:
          * `api:access`
      operationId: leases#show#1
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: query
        minimum: 1
        name: cloudaccount_id
        required: false
        type: integer
      - description: Lease ID
        in: path
        minimum: 1
        name: lease_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: show leases
      tags:
      - leases
  /accounts/{account_id}/leases/{lease_id}/delete:
    post:
      description: |-
        Delete a lease from DB

        Required security scopes:
          * `api:access`
      operationId: leases#deleteFromDB#1
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: query
        minimum: 1
        name: cloudaccount_id
        required: false
        type: integer
      - description: Lease ID
        in: path
        minimum: 1
        name: lease_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: deleteFromDB leases
      tags:
      - leases
  /accounts/{account_id}/leases/{lease_id}/expiry:
    post:
      description: |-
        Set expiry of a lease

        Required security scopes:
          * `api:access`
      operationId: leases#setExpiry#1
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: query
        minimum: 1
        name: cloudaccount_id
        required: false
        type: integer
      - description: Target expiry datetime
        in: query
        name: expires_at
        required: true
        type: string
      - description: Lease ID
        in: path
        minimum: 1
        name: lease_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: setExpiry leases
      tags:
      - leases
  /accounts/{account_id}/leases/{lease_id}/terminate:
    post:
      description: |-
        Terminate a lease

        Required security scopes:
          * `api:access`
      operationId: leases#terminate#1
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - description: Cloudaccount ID
        in: query
        minimum: 1
        name: cloudaccount_id
        required: false
        type: integer
      - description: Lease ID
        in: path
        minimum: 1
        name: lease_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: terminate leases
      tags:
      - leases
  /accounts/{account_id}/mailer_config:
    delete:
      description: |-
        Remove custom mailer

        Required security scopes:
          * `api:access`
      operationId: account#removeMailer
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: removeMailer account
      tags:
      - account
    post:
      description: |-
        Configure custom mailer

        Required security scopes:
          * `api:access`
      operationId: account#mailerConfig
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/MailerConfigAccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: mailerConfig account
      tags:
      - account
  /accounts/{account_id}/new_api_token:
    post:
      description: Create new API token
      operationId: account#new_api_token
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/NewApiTokenAccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      summary: new_api_token account
      tags:
      - account
  /accounts/{account_id}/slack_config:
    delete:
      description: |-
        Remove slack

        Required security scopes:
          * `api:access`
      operationId: account#removeSlack
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: removeSlack account
      tags:
      - account
    post:
      description: |-
        Configure slack

        Required security scopes:
          * `api:access`
      operationId: account#slackConfig
      parameters:
      - description: Account ID
        in: path
        minimum: 1
        name: account_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SlackConfigAccountPayload'
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:access
      summary: slackConfig account
      tags:
      - account
  /email_action/leases/{lease_uuid}/{group_uid_hash}/{action}:
    get:
      description: Perform an action on a lease
      operationId: email_action#actions
      parameters:
      - description: Action to be peformed on the lease
        enum:
        - approve
        - terminate
        - extend
        in: path
        name: action
        required: true
        type: string
      - description: Hash of group UID
        in: path
        name: group_uid_hash
        required: true
        type: string
      - description: UUID of the lease
        in: path
        name: lease_uuid
        required: true
        type: string
      - description: The signature of this link
        in: query
        minLength: 30
        name: sig
        required: true
        type: string
      - description: The token_once of this link
        in: query
        minLength: 30
        name: tok
        required: true
        type: string
      responses:
        "200":
          description: OK
      schemes:
      - http
      - https
      summary: actions email_action
      tags:
      - email_action
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      - https
      summary: Download goa/swagger/swagger.json
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
